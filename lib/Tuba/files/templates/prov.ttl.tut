% my $max_children = 20;
% my @parents;
% my @parents_with_references;
% my @children_with_references;
% my @children;
% my $references_url;
% my $pub = $object->get_publication;
% if ($pub) {
    % @parents = $pub->get_parents;
    % @children = $pub->children;
    % @parents_with_references = $pub->get_parents_with_references;
    % @children_with_references = $pub->get_children_with_references((param 'show_all') ? () : (limit => $max_children));
    % $references_url = $pub->references_url($self);
% }

% if (@parents || @parents_with_references || @children) {
    % for my $parent (@parents_with_references) {
       % my $parent_pub = $parent->{parent};
<<%= current_resource %>>
   cito:isCitedBy <<%= $parent_pub->to_object->uri($self)->to_abs %>>;
   biro:isReferencedBy <<%= uri($parent->{reference}) %>>.

    % } 
% }

% if (!(stash 'no_refs') && @children_with_references) {		
    % for my $child (@children_with_references) {   
       % my $child_pub = $child->{child};
<<%= current_resource %>>
          % if ($child_pub) {
   cito:cites <<%= $child_pub->to_object->uri($self)->to_abs %>>;
          % }
   biro:references <<%= uri($child->{reference}) %>>.

    % }

% }

% if (@parents || @children) {
    % for my $parent (@parents) {
       % my $parent_pub = $parent->{publication};
<<%= current_resource %>>
          % if ($parent->{activity}) {
   prov:wasGeneratedBy <<%= uri($parent->{activity}) %>>;
          % }
          % if ($parent->{publication}) {
   prov:wasDerivedFrom <<%= uri($parent->{publication}->to_object) %>>.
          % }

    % }

    % for my $child (@children) {
       % my $type = $child->publication->publication_type_identifier;
       % my $rel = $child->relationship;
<<%= uri($child->publication->to_object) %>>
   a gcis:<%= ucfirst($child->publication->publication_type_identifier) %>;
   prov:wasDerivedFrom <<%= current_resource %>>.

    % }
% }
