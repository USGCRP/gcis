% layout 'default', namespaces => [qw/dcterms gcis xsd dwc bibo prov biro cito/];
%= filter_lines_with empty_predicate() => begin
%#
<<%= current_resource %>>
   dcterms:identifier "<%= $report->identifier %>";
   dcterms:title "<%= $report->title %>"^^xsd:string;
   dwc:year "<%= $report->publication_year %>"^^xsd:gYear;
% if ($report->doi) {
   bibo:doi "<%= $report->doi %>";
% } else {
   gcis:hasURL "<%= $report->url %>"^^xsd:anyURI;
% }
   dcterms:description "<%= $report->summary %>"^^xsd:string;

## A report can either be a report, assessment, or technical input
   dcterms:type "<%= $report->report_type_identifier %>";

## Frequency of report release:
   dcterms:frequency "<%= human_duration($report->frequency) %>"^^xsd:string;

## Report topic(s):
   dcterms:subject "<%= $report->topic %>"^^xsd:string;

## Report chapter(s):
% for my $chapter ($report->chapters) {
   gcis:hasChapter <<%= uri($chapter) %>>;	
% }

## Report figure(s):
% for my $figure ($report->figures) {
   gcis:hasFigure <<%= uri($figure) %>>;
% }

## Report table(s):
% for my $table ($report->tables) {
   gcis:hasTable <<%= uri($table) %>>;
% }

## Report finding(s):
% for my $finding ($report->findings) {
   gcis:hasFinding <<%= uri($finding) %>>;
% }

## Region(s):
% if (my $pub = $report->get_publication) {
   dcterms:Relation <<%= uri($pub->regions) %>>;
% }

   a gcis:Report .

% end

%= include 'prov';
%= include 'contributors';
